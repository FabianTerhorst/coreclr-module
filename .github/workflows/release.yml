on:
  push:
    tags:
      - '*.*.*'
      - '*.*.*-*' 
jobs:
  fetch-nethost-linux:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Setup .NET Core
        shell: pwsh
        run: |
          .\download_dotnet.ps1 ${{ runner.temp }} linux
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: nethost-linux
          path: ${{ runner.temp }}/libnethost.tar
  fetch-nethost-windows:
    runs-on: windows-2022
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Setup .NET Core
        shell: pwsh
        run: |
          .\download_dotnet.ps1 ${{ runner.temp }} win
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: nethost-windows
          path: ${{ runner.temp }}\libnethost.tar
  build-api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x
      - id: build_info
        run: |
          branch=$(git ls-remote --heads origin | grep $GITHUB_SHA | sed "s/.*\///")
          branch=$([[ $branch == 'release' ]] && echo "release" || [[ $branch == 'rc' ]] && echo "rc" || [[ $branch == 'dev' ]] && echo "dev" || echo "$branch")
          version=${GITHUB_REF##*/}
          echo "##[set-output name=branch;]$branch"
          echo "##[set-output name=version;]$version"
      - name: Replace package versions
        run: |
          echo "$(echo "`cat ./api/AltV.Net/AltV.Net.csproj`" | perl -pe 's/<PackageVersion>(.*)<\/PackageVersion>/<PackageVersion>'${GITHUB_REF##*/}'<\/PackageVersion>/g')" > ./api/AltV.Net/AltV.Net.csproj
          echo "$(echo "`cat ./api/AltV.Net/AltV.Net.csproj`" | perl -pe 's/<PackageReleaseNotes>(.*)<\/PackageReleaseNotes>/<PackageReleaseNotes>Changelog can be found here https:\/\/github.com\/FabianTerhorst\/coreclr-module\/releases\/tag\/'${GITHUB_REF##*/}'<\/PackageReleaseNotes>/g')" > ./api/AltV.Net/AltV.Net.csproj
          echo "$(echo "`cat ./api/AltV.Net.Async/AltV.Net.Async.csproj`" | perl -pe 's/<PackageVersion>(.*)<\/PackageVersion>/<PackageVersion>'${GITHUB_REF##*/}'<\/PackageVersion>/g')" > ./api/AltV.Net.Async/AltV.Net.Async.csproj
          echo "$(echo "`cat ./api/AltV.Net.Async/AltV.Net.Async.csproj`" | perl -pe 's/<PackageReleaseNotes>(.*)<\/PackageReleaseNotes>/<PackageReleaseNotes>Changelog can be found here https:\/\/github.com\/FabianTerhorst\/coreclr-module\/releases\/tag\/'${GITHUB_REF##*/}'<\/PackageReleaseNotes>/g')" > ./api/AltV.Net.Async/AltV.Net.Async.csproj
          echo "$(echo "`cat ./api/AltV.Net.Interactions/AltV.Net.Interactions.csproj`" | perl -pe 's/<PackageVersion>(.*)<\/PackageVersion>/<PackageVersion>'${GITHUB_REF##*/}'<\/PackageVersion>/g')" > ./api/AltV.Net.Interactions/AltV.Net.Interactions.csproj
          echo "$(echo "`cat ./api/AltV.Net.Interactions/AltV.Net.Interactions.csproj`" | perl -pe 's/<PackageReleaseNotes>(.*)<\/PackageReleaseNotes>/<PackageReleaseNotes>Changelog can be found here https:\/\/github.com\/FabianTerhorst\/coreclr-module\/releases\/tag\/'${GITHUB_REF##*/}'<\/PackageReleaseNotes>/g')" > ./api/AltV.Net.Interactions/AltV.Net.Interactions.csproj
          echo "$(echo "`cat ./api/AltV.Net.Async.CodeGen/AltV.Net.Async.CodeGen.csproj`" | perl -pe 's/<PackageVersion>(.*)<\/PackageVersion>/<PackageVersion>'${GITHUB_REF##*/}'<\/PackageVersion>/g')" > ./api/AltV.Net.Async.CodeGen/AltV.Net.Async.CodeGen.csproj
          echo "$(echo "`cat ./api/AltV.Net.Async.CodeGen/AltV.Net.Async.CodeGen.csproj`" | perl -pe 's/<PackageReleaseNotes>(.*)<\/PackageReleaseNotes>/<PackageReleaseNotes>Changelog can be found here https:\/\/github.com\/FabianTerhorst\/coreclr-module\/releases\/tag\/'${GITHUB_REF##*/}'<\/PackageReleaseNotes>/g')" > ./api/AltV.Net.Async.CodeGen/AltV.Net.Async.CodeGen.csproj
          echo "$(echo "`cat ./api/AltV.Net.Resources.Chat.Api/AltV.Net.Resources.Chat.Api.csproj`" | perl -pe 's/<PackageVersion>(.*)<\/PackageVersion>/<PackageVersion>'${GITHUB_REF##*/}'<\/PackageVersion>/g')" > ./api/AltV.Net.Resources.Chat.Api/AltV.Net.Resources.Chat.Api.csproj
          echo "$(echo "`cat ./api/AltV.Net.Resources.Chat.Api/AltV.Net.Resources.Chat.Api.csproj`" | perl -pe 's/<PackageReleaseNotes>(.*)<\/PackageReleaseNotes>/<PackageReleaseNotes>Changelog can be found here https:\/\/github.com\/FabianTerhorst\/coreclr-module\/releases\/tag\/'${GITHUB_REF##*/}'<\/PackageReleaseNotes>/g')" > ./api/AltV.Net.Resources.Chat.Api/AltV.Net.Resources.Chat.Api.csproj
          echo "$(echo "`cat ./api/AltV.Net.EntitySync.ServerEvent/AltV.Net.EntitySync.ServerEvent.csproj`" | perl -pe 's/<PackageVersion>(.*)<\/PackageVersion>/<PackageVersion>'${GITHUB_REF##*/}'<\/PackageVersion>/g')" > ./api/AltV.Net.EntitySync.ServerEvent/AltV.Net.EntitySync.ServerEvent.csproj
          echo "$(echo "`cat ./api/AltV.Net.EntitySync.ServerEvent/AltV.Net.EntitySync.ServerEvent.csproj`" | perl -pe 's/<PackageReleaseNotes>(.*)<\/PackageReleaseNotes>/<PackageReleaseNotes>Changelog can be found here https:\/\/github.com\/FabianTerhorst\/coreclr-module\/releases\/tag\/'${GITHUB_REF##*/}'<\/PackageReleaseNotes>/g')" > ./api/AltV.Net.EntitySync.ServerEvent/AltV.Net.EntitySync.ServerEvent.csproj
          echo "$(echo "`cat ./api/AltV.Net.Client/AltV.Net.Client.csproj`" | perl -pe 's/<PackageVersion>(.*)<\/PackageVersion>/<PackageVersion>'${GITHUB_REF##*/}'<\/PackageVersion>/g')" > ./api/AltV.Net.Client/AltV.Net.Client.csproj
          echo "$(echo "`cat ./api/AltV.Net.Client/AltV.Net.Client.csproj`" | perl -pe 's/<PackageReleaseNotes>(.*)<\/PackageReleaseNotes>/<PackageReleaseNotes>Changelog can be found here https:\/\/github.com\/FabianTerhorst\/coreclr-module\/releases\/tag\/'${GITHUB_REF##*/}'<\/PackageReleaseNotes>/g')" > ./api/AltV.Net.Client/AltV.Net.Client.csproj
          echo "$(echo "`cat ./api/AltV.Net.Client.Async/AltV.Net.Client.Async.csproj`" | perl -pe 's/<PackageVersion>(.*)<\/PackageVersion>/<PackageVersion>'${GITHUB_REF##*/}'<\/PackageVersion>/g')" > ./api/AltV.Net.Client.Async/AltV.Net.Client.Async.csproj
          echo "$(echo "`cat ./api/AltV.Net.Client.Async/AltV.Net.Client.Async.csproj`" | perl -pe 's/<PackageReleaseNotes>(.*)<\/PackageReleaseNotes>/<PackageReleaseNotes>Changelog can be found here https:\/\/github.com\/FabianTerhorst\/coreclr-module\/releases\/tag\/'${GITHUB_REF##*/}'<\/PackageReleaseNotes>/g')" > ./api/AltV.Net.Client.Async/AltV.Net.Client.Async.csproj
          echo "$(echo "`cat ./api/AltV.Net.ColShape/AltV.Net.ColShape.csproj`" | perl -pe 's/<PackageVersion>(.*)<\/PackageVersion>/<PackageVersion>'${GITHUB_REF##*/}'<\/PackageVersion>/g')" > ./api/AltV.Net.ColShape/AltV.Net.ColShape.csproj
          echo "$(echo "`cat ./api/AltV.Net.ColShape/AltV.Net.ColShape.csproj`" | perl -pe 's/<PackageReleaseNotes>(.*)<\/PackageReleaseNotes>/<PackageReleaseNotes>Changelog can be found here https:\/\/github.com\/FabianTerhorst\/coreclr-module\/releases\/tag\/'${GITHUB_REF##*/}'<\/PackageReleaseNotes>/g')" > ./api/AltV.Net.ColShape/AltV.Net.ColShape.csproj
          echo "$(echo "`cat ./api/AltV.Net.CApi/AltV.Net.CApi.csproj`" | perl -pe 's/<PackageVersion>(.*)<\/PackageVersion>/<PackageVersion>'${GITHUB_REF##*/}'<\/PackageVersion>/g')" > ./api/AltV.Net.CApi/AltV.Net.CApi.csproj
          echo "$(echo "`cat ./api/AltV.Net.CApi/AltV.Net.CApi.csproj`" | perl -pe 's/<PackageReleaseNotes>(.*)<\/PackageReleaseNotes>/<PackageReleaseNotes>Changelog can be found here https:\/\/github.com\/FabianTerhorst\/coreclr-module\/releases\/tag\/'${GITHUB_REF##*/}'<\/PackageReleaseNotes>/g')" > ./api/AltV.Net.CApi/AltV.Net.CApi.csproj
          echo "$(echo "`cat ./api/AltV.Net.Shared/AltV.Net.Shared.csproj`" | perl -pe 's/<PackageVersion>(.*)<\/PackageVersion>/<PackageVersion>'${GITHUB_REF##*/}'<\/PackageVersion>/g')" > ./api/AltV.Net.Shared/AltV.Net.Shared.csproj
          echo "$(echo "`cat ./api/AltV.Net.Shared/AltV.Net.Shared.csproj`" | perl -pe 's/<PackageReleaseNotes>(.*)<\/PackageReleaseNotes>/<PackageReleaseNotes>Changelog can be found here https:\/\/github.com\/FabianTerhorst\/coreclr-module\/releases\/tag\/'${GITHUB_REF##*/}'<\/PackageReleaseNotes>/g')" > ./api/AltV.Net.Shared/AltV.Net.Shared.csproj
          echo "$(echo "`cat ./api/AltV.Net.Sdk.Server/Sdk/Sdk.targets`" | perl -pe 's/Version=\"1.0.0\"/Version=\"'${GITHUB_REF##*/}'\"/g')" > ./api/AltV.Net.Sdk.Server/Sdk/Sdk.targets
          echo "$(echo "`cat ./api/AltV.Net.Sdk.Client/Sdk/Sdk.targets`" | perl -pe 's/Version=\"1.0.0\"/Version=\"'${GITHUB_REF##*/}'\"/g')" > ./api/AltV.Net.Sdk.Client/Sdk/Sdk.targets
          echo "$(echo "`cat ./api/AltV.Net.Sdk.Shared/Sdk/Sdk.targets`" | perl -pe 's/Version=\"1.0.0\"/Version=\"'${GITHUB_REF##*/}'\"/g')" > ./api/AltV.Net.Sdk.Shared/Sdk/Sdk.targets
          echo "$(echo "`cat ./api/AltV.Net.Sdk.Server/AltV.Net.Sdk.Server.csproj`" | perl -pe 's/<PackageVersion>(.*)<\/PackageVersion>/<PackageVersion>'${GITHUB_REF##*/}'<\/PackageVersion>/g')" > ./api/AltV.Net.Sdk.Server/AltV.Net.Sdk.Server.csproj
          echo "$(echo "`cat ./api/AltV.Net.Sdk.Client/AltV.Net.Sdk.Client.csproj`" | perl -pe 's/<PackageVersion>(.*)<\/PackageVersion>/<PackageVersion>'${GITHUB_REF##*/}'<\/PackageVersion>/g')" > ./api/AltV.Net.Sdk.Client/AltV.Net.Sdk.Client.csproj
          echo "$(echo "`cat ./api/AltV.Net.Sdk.Shared/AltV.Net.Sdk.Shared.csproj`" | perl -pe 's/<PackageVersion>(.*)<\/PackageVersion>/<PackageVersion>'${GITHUB_REF##*/}'<\/PackageVersion>/g')" > ./api/AltV.Net.Sdk.Shared/AltV.Net.Sdk.Shared.csproj
          echo "$(echo "`cat ./templates/AltV.Net.Templates.csproj`" | perl -pe 's/<PackageVersion>(.*)<\/PackageVersion>/<PackageVersion>'${GITHUB_REF##*/}'<\/PackageVersion>/g')" > ./templates/AltV.Net.Templates.csproj
          echo "$(echo "`cat ./templates/templates/altv-resource/.template.config/template.json`" | perl -pe 's/0.0.0/'${GITHUB_REF##*/}'/g')" > ./templates/templates/altv-resource/.template.config/template.json
          echo "$(echo "`cat ./templates/templates/altv-project-client/.template.config/template.json`" | perl -pe 's/0.0.0/'${GITHUB_REF##*/}'/g')" > ./templates/templates/altv-project-client/.template.config/template.json
          echo "$(echo "`cat ./templates/templates/altv-project-server/.template.config/template.json`" | perl -pe 's/0.0.0/'${GITHUB_REF##*/}'/g')" > ./templates/templates/altv-project-server/.template.config/template.json
          echo "$(echo "`cat ./templates/templates/altv-project-shared/.template.config/template.json`" | perl -pe 's/0.0.0/'${GITHUB_REF##*/}'/g')" > ./templates/templates/altv-project-shared/.template.config/template.json
      - name: Build
        working-directory: ./api
        run: |
          dotnet publish AltV.Net.Host -c Release -f net6.0
          dotnet publish AltV.Net.Host -c Release -f net6.0
          dotnet publish AltV.Net.Shared -c Release -f net6.0
          dotnet publish AltV.Net.CApi -c Release -f net6.0
          dotnet publish AltV.Net -c Release -f net6.0
          dotnet publish AltV.Net -c Debug -f net6.0
          dotnet publish AltV.Net.Async -c Release -f net6.0
          dotnet publish AltV.Net.Async -c Debug -f net6.0
          dotnet publish AltV.Net.Interactions -c Release -f net6.0
          dotnet publish AltV.Net.Async.CodeGen -c Release -f netstandard2.0
          dotnet publish AltV.Net.Resources.Chat.Api -c Release -f net6.0
          dotnet publish AltV.Net.EntitySync.ServerEvent -c Release -f net6.0
          dotnet publish AltV.Net.Client -c Release -f net6.0
          dotnet publish AltV.Net.Client.Async -c Release -f net6.0
          dotnet publish AltV.Net.ColShape -c Release -f net6.0
          dotnet publish AltV.Net.Sdk.Server -c Release
          dotnet publish AltV.Net.Sdk.Client -c Release
          dotnet publish AltV.Net.Sdk.Shared -c Release
      - run: |
          mkdir -p ./modules/linux
          mkdir -p ./modules/windows
          mkdir -p ./modules/api-release
          mkdir -p ./modules/api-debug
          cp ./api/AltV.Net.Host/bin/Release/*/publish/AltV.Net.Host.dll ./modules/linux
          cp ./api/AltV.Net.Host/bin/Release/*/publish/AltV.Net.Host.runtimeconfig.json ./modules/linux
          cp ./api/AltV.Net.Host/bin/Release/*/publish/AltV.Net.Host.dll ./modules/windows
          cp ./api/AltV.Net.Host/bin/Release/*/publish/AltV.Net.Host.runtimeconfig.json ./modules/windows
          cp ./api/AltV.Net/bin/Release/*/publish/AltV.Net.dll ./modules/api-release
          cp ./api/AltV.Net/bin/Release/*/publish/AltV.Net.pdb ./modules/api-release
          cp ./api/AltV.Net.Async/bin/Release/*/publish/AltV.Net.Async.dll ./modules/api-release
          cp ./api/AltV.Net.Async/bin/Release/*/publish/AltV.Net.Async.pdb ./modules/api-release
          cp ./api/AltV.Net/bin/Debug/*/publish/AltV.Net.dll ./modules/api-debug
          cp ./api/AltV.Net/bin/Debug/*/publish/AltV.Net.pdb ./modules/api-debug
          cp ./api/AltV.Net.Async/bin/Debug/*/publish/AltV.Net.Async.dll ./modules/api-debug
          cp ./api/AltV.Net.Async/bin/Debug/*/publish/AltV.Net.Async.pdb ./modules/api-debug
          echo '${{ steps.build_info.outputs.branch }}/${{ steps.build_info.outputs.version }}' > ./modules/build_info.txt
      - uses: alirezanet/publish-nuget@v3.0.5
        with:
          PROJECT_FILE_PATH: ./api/AltV.Net/AltV.Net.csproj
          VERSION_REGEX: <PackageVersion>(.*)<\/PackageVersion>
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}
          INCLUDE_SYMBOLS: true
          TAG_COMMIT: false
          NO_BUILD: true
      - uses: alirezanet/publish-nuget@v3.0.5
        with:
          PROJECT_FILE_PATH: ./api/AltV.Net.Async/AltV.Net.Async.csproj
          VERSION_REGEX: <PackageVersion>(.*)<\/PackageVersion>
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}
          INCLUDE_SYMBOLS: true
          TAG_COMMIT: false
          NO_BUILD: true
      - uses: alirezanet/publish-nuget@v3.0.5
        with:
          PROJECT_FILE_PATH: ./api/AltV.Net.Interactions/AltV.Net.Interactions.csproj
          VERSION_REGEX: <PackageVersion>(.*)<\/PackageVersion>
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}
          INCLUDE_SYMBOLS: true
          TAG_COMMIT: false
          NO_BUILD: true
      - uses: alirezanet/publish-nuget@v3.0.5
        with:
          PROJECT_FILE_PATH: ./api/AltV.Net.Async.CodeGen/AltV.Net.Async.CodeGen.csproj
          VERSION_REGEX: <PackageVersion>(.*)<\/PackageVersion>
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}
          INCLUDE_SYMBOLS: true
          TAG_COMMIT: false
          NO_BUILD: true
      - uses: alirezanet/publish-nuget@v3.0.5
        with:
          PROJECT_FILE_PATH: ./api/AltV.Net.Resources.Chat.Api/AltV.Net.Resources.Chat.Api.csproj
          VERSION_REGEX: <PackageVersion>(.*)<\/PackageVersion>
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}
          INCLUDE_SYMBOLS: true
          TAG_COMMIT: false
          NO_BUILD: true
      - uses: alirezanet/publish-nuget@v3.0.5
        with:
          PROJECT_FILE_PATH: ./api/AltV.Net.EntitySync.ServerEvent/AltV.Net.EntitySync.ServerEvent.csproj
          VERSION_REGEX: <PackageVersion>(.*)<\/PackageVersion>
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}
          INCLUDE_SYMBOLS: true
          TAG_COMMIT: false
          NO_BUILD: true
      - uses: alirezanet/publish-nuget@v3.0.5
        with:
          PROJECT_FILE_PATH: ./api/AltV.Net.Client/AltV.Net.Client.csproj
          VERSION_REGEX: <PackageVersion>(.*)<\/PackageVersion>
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}
          INCLUDE_SYMBOLS: true
          TAG_COMMIT: false
          NO_BUILD: true
      - uses: alirezanet/publish-nuget@v3.0.5
        with:
          PROJECT_FILE_PATH: ./api/AltV.Net.Client.Async/AltV.Net.Client.Async.csproj
          VERSION_REGEX: <PackageVersion>(.*)<\/PackageVersion>
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}
          INCLUDE_SYMBOLS: true
          TAG_COMMIT: false
          NO_BUILD: true
      - uses: alirezanet/publish-nuget@v3.0.5
        with:
          PROJECT_FILE_PATH: ./api/AltV.Net.ColShape/AltV.Net.ColShape.csproj
          VERSION_REGEX: <PackageVersion>(.*)<\/PackageVersion>
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}
          INCLUDE_SYMBOLS: true
          TAG_COMMIT: false
          NO_BUILD: true
      - uses: alirezanet/publish-nuget@v3.0.5
        with:
          PROJECT_FILE_PATH: ./api/AltV.Net.Shared/AltV.Net.Shared.csproj
          VERSION_REGEX: <PackageVersion>(.*)<\/PackageVersion>
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}
          INCLUDE_SYMBOLS: true
          TAG_COMMIT: false
          NO_BUILD: true
      - uses: alirezanet/publish-nuget@v3.0.5
        with:
          PROJECT_FILE_PATH: ./api/AltV.Net.CApi/AltV.Net.CApi.csproj
          VERSION_REGEX: <PackageVersion>(.*)<\/PackageVersion>
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}
          INCLUDE_SYMBOLS: true
          TAG_COMMIT: false
          NO_BUILD: true
      - uses: alirezanet/publish-nuget@v3.0.5
        with:
          PROJECT_FILE_PATH: ./api/AltV.Net.Sdk.Client/AltV.Net.Sdk.Client.csproj
          VERSION_REGEX: <PackageVersion>(.*)<\/PackageVersion>
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}
          INCLUDE_SYMBOLS: true
          TAG_COMMIT: false
          NO_BUILD: true
      - uses: alirezanet/publish-nuget@v3.0.5
        with:
          PROJECT_FILE_PATH: ./api/AltV.Net.Sdk.Server/AltV.Net.Sdk.Server.csproj
          VERSION_REGEX: <PackageVersion>(.*)<\/PackageVersion>
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}
          INCLUDE_SYMBOLS: true
          TAG_COMMIT: false
          NO_BUILD: true
      - uses: alirezanet/publish-nuget@v3.0.5
        with:
          PROJECT_FILE_PATH: ./api/AltV.Net.Sdk.Shared/AltV.Net.Sdk.Shared.csproj
          VERSION_REGEX: <PackageVersion>(.*)<\/PackageVersion>
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}
          INCLUDE_SYMBOLS: true
          TAG_COMMIT: false
          NO_BUILD: true
      - uses: alirezanet/publish-nuget@v3.0.5
        with:
          PROJECT_FILE_PATH: ./templates/AltV.Net.Templates.csproj
          VERSION_REGEX: <PackageVersion>(.*)<\/PackageVersion>
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}
          INCLUDE_SYMBOLS: true
          TAG_COMMIT: false
          NO_BUILD: true
      - name: Pack files
        run: |
          tar -cvf ./api.tar modules
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: csharp-module-api
          path: ./api.tar
  build-server:
    runs-on: ${{ matrix.config.os }}
    needs: [build-api, fetch-nethost-linux, fetch-nethost-windows]
    strategy:
      matrix:
        config:
          - {
              name: linux,
              os: ubuntu-20.04,
              cc: gcc-9,
              cxx: g++-9,
              args: -DCMAKE_BUILD_TYPE=RelWithDebInfo,
              nethost: nethost-linux,
            }
          - {
              name: windows,
              os: windows-latest,
              cc: cl,
              cxx: cl,
              args: -DCMAKE_BUILD_TYPE=RelWithDebInfo -A x64 -T host=x64,
              nethost: nethost-windows,
            }
          #- {
          #    name: linux-arm,
          #    os: ubuntu-latest,
          #    cc: aarch64-linux-gnu-gcc-8,
          #    cxx: aarch64-linux-gnu-g++-8,
          #    args: -DCMAKE_BUILD_TYPE=RelWithDebInfo,
          #    nethost: nethost-linux-arm,
          #  }
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.config.nethost }}
          path: ./runtime/nethost
      - working-directory: ./runtime/nethost
        shell: bash
        run: |
          tar xvf libnethost.tar
          ls -l
          pwd
      - working-directory: ./runtime/server
        shell: cmake -P {0}
        run: |
          set(ENV{CC} ${{ matrix.config.cc }})
          set(ENV{CXX} ${{ matrix.config.cxx }})
          file(MAKE_DIRECTORY build)
          execute_process(
            COMMAND cmake .. ${{ matrix.config.args }}
            RESULT_VARIABLE result
            WORKING_DIRECTORY build
          )
          if (NOT result EQUAL 0)
            message(FATAL_ERROR "Bad exit status")
          endif()
      - working-directory: ./runtime/server
        shell: bash
        run: cmake --build build --config RelWithDebInfo
      - if: ${{ runner.os == 'Linux' }}
        shell: bash
        run: |
          mkdir -p modules/linux/modules/
          cp ./runtime/server/build/src/libcsharp-module.so ./modules/linux/modules
      - if: ${{ runner.os == 'Windows' }}
        shell: bash
        run: |
          mkdir -p modules/windows/modules/
          cp ./runtime/server/build/src/RelWithDebInfo/csharp-module.dll ./modules/windows/modules
          cp ./runtime/server/build/src/RelWithDebInfo/csharp-module.pdb ./modules/windows/modules
      - id: create_archive
        shell: bash
        run: |
          filename=$(echo "${{ matrix.config.name }}")
          tar -cvf ./$filename.tar modules/$filename/modules
          echo "::set-output name=art_name::$filename"
      - uses: actions/upload-artifact@v3
        with:
          name: csharp-module-${{ matrix.config.name }}
          path: ./${{ steps.create_archive.outputs.art_name }}.tar
  deploy-cdn:
    runs-on: ubuntu-latest
    needs: build-server
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: csharp-module-api
          path: ./
      - uses: actions/download-artifact@v3
        with:
          name: csharp-module-linux
          path: ./
      - uses: actions/download-artifact@v3
        with:
          name: csharp-module-windows
          path: ./
      - run: |
          tar -xvf ./api.tar
          tar -xvf ./linux.tar
          tar -xvf ./windows.tar
      - id: build_info
        run: |
          build_info=$(cat ./modules/build_info.txt)
          echo "##[set-output name=branch;]${build_info%%/*}"
          echo "##[set-output name=version;]${build_info##*/}"
      - run: npm i @altmp/upload-tool@latest
      - run: npx alt-upload linux coreclr-module/$BRANCH/x64_linux $VERSION
        working-directory: ./modules
        env:
          CI_UPLOAD_URL: ${{ secrets.CI_UPLOAD_URL }}
          CI_DEPLOY_TOKEN: ${{ secrets.CI_DEPLOY_TOKEN }}
          BRANCH: ${{ steps.build_info.outputs.branch }}
          VERSION: ${{ steps.build_info.outputs.version }}
      - run: npx alt-upload windows coreclr-module/$BRANCH/x64_win32 $VERSION
        working-directory: ./modules
        env:
          CI_UPLOAD_URL: ${{ secrets.CI_UPLOAD_URL }}
          CI_DEPLOY_TOKEN: ${{ secrets.CI_DEPLOY_TOKEN }}
          BRANCH: ${{ steps.build_info.outputs.branch }}
          VERSION: ${{ steps.build_info.outputs.version }}
  create-release:
    runs-on: ubuntu-latest
    needs: deploy-cdn
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: csharp-module-api
          path: ./
      - uses: actions/download-artifact@v3
        with:
          name: csharp-module-linux
          path: ./
      - uses: actions/download-artifact@v3
        with:
          name: csharp-module-windows
          path: ./
      - run: |
          tar -xvf ./api.tar
          tar -xvf ./linux.tar
          tar -xvf ./windows.tar
      - id: build_info
        run: |
          build_info=$(cat ./modules/build_info.txt)
          echo "##[set-output name=branch;]${build_info%%/*}"
          echo "##[set-output name=version;]${build_info##*/}"
      - run: |
          (cd ./modules/linux && zip -r ../../csharp-module-linux.zip *)
          (cd ./modules/windows && zip -r ../../csharp-module-win.zip *)
          (cd ./modules/api-release && zip -r ../../csharp-module-api-release.zip *)
          (cd ./modules/api-debug && zip -r ../../csharp-module-api-debug.zip *)
      - id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.build_info.outputs.version }}
          release_name: Version ${{ steps.build_info.outputs.version }}
          draft: true
          prerelease: ${{ steps.build_info.outputs.branch != 'release' }}
      - id: upload-release-asset 
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./csharp-module-linux.zip
          asset_name: csharp-module-linux.zip
          asset_content_type: application/zip
      - uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./csharp-module-win.zip
          asset_name: csharp-module-win.zip
          asset_content_type: application/zip
      - uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./csharp-module-api-release.zip
          asset_name: csharp-module-api-release.zip
          asset_content_type: application/zip
      - uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./csharp-module-api-debug.zip
          asset_name: csharp-module-api-debug.zip
          asset_content_type: application/zip
  cleanup:
    runs-on: ubuntu-latest
    needs: create-release
    if: ${{ always() }}
    steps:
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: |
            nethost-linux
            nethost-windows
            csharp-module-linux
            csharp-module-windows
            csharp-module-api
